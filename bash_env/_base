
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

source $DIR/_bash
source $DIR/_shared_vars

_env=$(uname -a)
if [[ -n $(echo $_env | grep "Darwin") ]]; then
    source $DIR/_osx
elif [[ -n $(echo $_env | grep "Linux") ]]; then
    source $DIR/_linux
fi


export ALIAS='.alias_s'$SERVER_ID
export J=/home/jail/home/serv
export CLIENT_HOST=$SERVER

# setup quick folders for sharing among ubuntu cluster
for n in 1 2 4 5; do
    if [[ $n != $SERVER_ID ]]; then
    x=`printf "export SHARE%s=/Volumes/ub%s/home/ub%s" $n $n $n`
    eval $x
    x=`printf "export SHARE%s_SERVER=SERVER%s" $n $n`
        eval $x
    y=`printf "export SERV%s=/Volumes/ub%s/$J" $n $n`
    eval $y
    y=`printf "export SERV%s_SERVER=SERVER%s" $n $n`
    eval $y
   fi
done
if [[ $SERVER_ID != 3 ]]; then
    export SHARE3=/Volumes/mbp2/Users/admin
    export SHARE3_SERVER=SERVER3
fi

export BD=$HOME/BD_Scripts
export GIT_REPOS=$HOME/GIT_REPOS
export G=$GIT_REPOS

_dir=$HOME/.completers 
if [[ -d $_dir ]]; then
    for i in `env ls $_dir`; do
        source $_dir/$i
    done
fi

test ! -f $SERV_HOME/local_config/$ALIAS || source $SERV_HOME/local_config/$ALIAS
