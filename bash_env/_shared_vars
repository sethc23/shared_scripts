
function assign() {  eval "$1=\$(cat; echo .); $1=\${$1%.}";}
alias assign_help='echo "assign some_variable < <(some code)"'
function gdiff() { git diff $@ | cdiff -s -w 110; }
function djJSON() { f_getJSON http://0.0.0.0/api_view/$1/?format=json; }
function diff_dir_all() { colordiff --brief --recursive $1 $2; }
function diff_dir_left() { colordiff --brief --recursive $1 $2 | grep "Only in $(echo $1 | sed 's/[^/]*$//')"; }
function diff_dir_right() { colordiff --brief --recursive $1 $2 | grep "Only in $(echo $2 | sed 's/[^/]*$//')"; }
function diff_dir_right_copy_left { 
    here=$(echo $(pwd))
    f=$(diff_dir_right $1 $2 | awk '{print $3$4}' | sed 's/:/\//g' | sed 's/\/\//\//g');
    repl_part=$(echo $2 | sed 's/\//\\\//g');
    for from_file in $f 
        do
            to_file=$(echo $1$from_file | sed "s/$repl_part//g")
            cmd=$(echo "cp -R "$here/$from_file $to_file)
            #cmd=$(echo $here/$from_file $to_file)
            
            sh -c "$cmd"
            
            # | xargs cp -R
            #cp -R $(echo $from_file $to_file)
        done;
    unset here f repl_part to_file;}
function diff_dir_files() { colordiff --brief --recursive $1 $2 | grep -E '^Files'; }
function diff_dir_same() { colordiff --brief --recursive --report-identical-files $1 $2 | grep 'are identical'; }
function diff_files() { colordiff --side-by-side --suppress-common-lines --ignore-all-space \
    --ignore-blank-lines --ignore-space-change --ignore-blank-lines --width=200 $1 $2; }
function diff_files_left() { colordiff --side-by-side --suppress-common-lines --ignore-all-space \
    --ignore-blank-lines --ignore-space-change --ignore-blank-lines --width=200 $1 $2 | awk 'NR==1{print} NR>1 && /[^a-zA-Z0-9]<[^a-zA-Z0-9]/ {print}'; }
function diff_files_right() { colordiff --side-by-side --suppress-common-lines --ignore-all-space \
    --ignore-blank-lines --ignore-space-change --ignore-blank-lines --width=200 $1 $2 | awk 'NR==1{print} NR>1 && /[^a-zA-Z0-9]>[^a-zA-Z0-9]/ {print}'; }
function source_bash() { _orig=`pwd`; source $HOME/$SHELL_CONFIG; cd $_orig; }
function get_my_ip_int_f() { \
    if [ `uname` = 'Darwin' ]; then
        _test=`ipconfig getifaddr en0`
        if [ -z $_test ]; then
            _test=`ipconfig getifaddr en1`
            if [ -z $_test ]; then
                echo 'No ethernet or wireless internal IP.'
            else
                echo $_test
            fi
        else
            echo $_test
        fi
    else
        ip route get 8.8.8.8 | awk '{print $NF; exit}'
    fi;}
function get_my_ip_ext_f() { \
    curl -s 'http://ipv4.nsupdate.info/myip' | \
    sed -r 's/^([0-9]{,3}\.[0-9]{,3}\.[0-9]{,3}\.[0-9]{,3})/\1/g'; }
alias get_my_ip_int='get_my_ip_int_f'
alias get_my_ip_ext='get_my_ip_ext_f'
function pull_shared_scripts() { a=`pwd`; cd $HOME/.scripts; git pull sub_dest master; source_bash; cd $a;}
function push_shared_scripts() { cd $HOME/.scripts;\
    git add -- .alias_shared;\
    git add -- .alias_linux;\
    git commit -m "updating aliases";\
    git push sub_dest master; }
function edit_this_bash() { $EDITOR $SERV_HOME/$ALIAS; source_bash; }
function edit_bash_share() { $EDITOR $HOME/.scripts/.alias_shared; source_bash; }
function edit_linux_share() { $EDITOR $HOME/.scripts/.alias_linux; source_bash; }
function edit_bash_prof() { $EDITOR "$HOME/$SHELL_CONFIG"; source_bash; }
function newalias_here() { echo "alias "$1 >> $SERV_HOME/$ALIAS; source_bash; }
function newalias_shared() { echo "alias "$1 >> $HOME/.scripts/.alias_shared; pull_shared_scripts; source_bash; }
function newalias_linux() { echo "alias "$1 >> $HOME/.scripts/.alias_linux; pull_shared_scripts; source_bash; }
function f_find_file() { sudo find -H -s $1 -type f -iregex "$2"; }
function f_find_in_files() { sudo find $1 -type f | xargs grep -iE "$2"; }
function f_find_folder() { sudo find -H -s $1 -type d -iregex "$2"; }
function f_getJSON() { curl -H 'Accept: application/json; indent=4' $1; }
function f_kill_by() { sudo kill -9 `ps -awx | grep $1 | grep -v grep | awk '{print $1}'`; }
function f_kill_by_port() { lsof -sTCP:LISTEN -T | awk '{print $2,$10}' | grep $1$ | cut -d " " -f1 | xargs -I '{}' kill -9 {} ; }
function f_mp_check() { port installed "*"$1"*" ; port search "*"$1"*"; }
function f_mp_py() { sudo port select python python$1; }
function f_mp_contents_exe () { port -q contents $1 | grep -E '/s?bin/'; }
function f_sencha_build() { cd $APORO/static/sencha; sudo sencha app build production; }
function mp_py_select() { echo "admin" | sudo port select python python$1; }
function pyprofilewrite() { kernprof.py -l $1; }
function pyprofileread() { python -m line_profiler $1.lprof; }
function RD() { cd $BD/RD/src; python seamless.py; }
function RDt() { cd $BD/RD/src; python seamless_test.py; }


alias AP_android='cd $APORO/static/sencha/phonegap/platforms/android/'
alias AP_phonegap_build_android='AP_android; sudo phonegap build android --release;'
alias AP_sencha='cd $APORO/static/sencha/'
alias AP_sencha_build='AP_sencha; sudo sencha app build package;'
alias JSON='f_getJSON'
alias RD_e='cd $BD/RD/src'
alias RDt='RDt'

alias apache_compile='apachectl -V'
alias apache_config='sudo emacs /etc/apache2/httpd.conf'
alias apache_mods='apachectl -M'
alias apache_restart='sudo apachectl restart'
alias apache_test='sudo apachectl configtest'
alias apache_virtuals='apachectl -S'

#alias aprinto_psql='/opt/local/lib/postgresql93/bin/psql -U postgres -h 0.0.0.0 --port=8800 aprinto'


alias aws_addr='aws ec2 describe-addresses --filters Name="instance-id",Values="i-8206d068"'
alias aws_attach_volume='aws ec2 attach-volume --volume-id vol-349bc67f --instance-id i-8206d068 --device /dev/sdh'
alias aws_config='cat $AWS_CONFIG_FILE'
alias aws_create_snapshot='aws ec2 create-snapshot --volume-id vol-f4f5a9bc --description'
alias aws_create_volume='aws ec2 create-volume --snapshot-id snap-97e0dc1a --availability-zone us-east-1a'
alias aws_env='cd $SERV_HOME/aws; source ENV/bin/activate'
function aws_info_f() { aws ec2 describe-instances --filters Name="tag-value",Values="$1"; }
alias aws_info='aws_info_f'
alias aws_ip_assoc='aws ec2 associate-address --instance-id i-40b143ba --allocation-id eipalloc-44289721'
alias aws_ip_disassoc='aws ec2 disassociate-address --association-id eipassoc-5a8bc53e'
alias aws_owner_id='aws_info | grep IpOwnerId'
alias aws_s3_buckets='aws s3 ls'
alias aws_show_snapshots='aws ec2 describe-snapshots --filters Name="owner-id",Values="225385062148"'
alias aws_start='aws_env; aws ec2 start-instances --instance-id "i-8206d068"'

alias pull_shared_scripts='pull_shared_scripts'
alias push_shared_scripts='push_shared_scripts'
alias push_ssh_config='mnt; cp -R ~/.ssh/config /Volumes/mb/Users/admin/.ssh/; cp -R ~/.ssh/config /Volumes/ubuntu/home/ubuntu/.ssh/'
alias ssh_config='emacs ~/.ssh/config; push_ssh_config'

function copy_back_aliases() { cp -R $HOME/.alias_shared $HOME/.scripts/.alias_shared; }
alias bashedit_here='edit_this_bash'
alias bashedit_prof='edit_bash_prof'
alias bashedit_shared='edit_bash_share; push_shared_scripts'
alias bashedit_linux='edit_linux_share; push_shared_scripts'

alias BD_env='cd $BD; source ENV/bin/activate'

alias chmod_num='stat -c "%a"'
alias cmd='compgen -a | grep'
alias close_tcp='fuser -k -n tcp'
alias colordiff='colordiff --minimal --strip-trailing-cr --text --ignore-blank-lines --ignore-space-change --ignore-all-space --ignore-tab-expansion --ignore-trailing-space --suppress-common-lines --side-by-side'
alias convert_pdf='pdftohtml -i -c -xml'

alias countF='ls | wc -l'
alias cy_build='cd $BD/RD/src/cython_exts/; python cy-build.py build_ext -i;'
alias cy_clean='cd $BD/RD/src/cython_exts/; sudo python cy-build.py clean;'
alias cy_folder='cd $BD/RD/src/cython_exts/;'
alias cy_help='cd $BD/RD/src/cython_exts/; python cy-build.py --help-commands;'

alias ec2="ssh -i ~/.ssh/grp1.pem ec2-user@ec2-54-164-189-68.compute-1.amazonaws.com -p 10101"
alias ec2_reboot='aws ec2 reboot-instances --instance-ids i-8206d068'
alias ec2_pg_tunnel='ssh ub3 -L 9088:localhost:8800 -N &'

alias find_file='f_find_file'
alias find_folder='f_find_folder'
alias dir_size='du -sh'
alias grep='grep -i --color=auto'
alias fgrep='fgrep -i --color=auto'
alias egrep='egrep -i --color=auto'

alias get_tty='tty | sed -e "s/.*tty\(.*\)/\1/"'

alias git_sencha='echo "admin" | sudo git clone https://github.com/sethc23/aporo.git -b sencha $HOME/django/Dropbox/aporo/static/sencha'
alias grep_folder='grep -r "$1" *'

alias grok_app='ngrok -hostname app.aporodelivery.com 80'
alias grok_mysql='ngrok -proto tcp 3306'
alias grok_printer='ngrok -hostname printer.aporodelivery.com 80'

alias hist_cmds="history | awk '{\$1=\$2=\$3=\"\";print}' | sed 's/^   //'"

# history | sed -e 's/^[ \t]*//' | sort -u -k4 | sort -k1
# need to standardize column separation and re-split

function ib_e() { cd $IPY; source ENV/bin/activate; }
function ib_qt_ub2() { sudo $IPY/ENV/bin/ipython qtconsole --existing /Volumes/ub2/home/ub2/.ipython/profile_default/security/kernel-$1.json;}

function jq_merge() { jq -sRcj ' [ splits("\n")? | split(":") as $i | { ($i[0]?) : ( $i[1] | sub("^(\\s)+"; ""; "x") ) } ]' | jq -cj 'add'; }

function link_mp_ib() { ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/$1 \
    $IPY/ENV/lib/python2.7/site-packages/; }
function link_mp_aprinto() { ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/$1 \
    $APRINTO/ENV/lib/python2.7/site-packages/; }
function link_mp_check() { ls -la /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ | grep -i $1; }
function link_mp_ib_confirm() { ls -la $IPY/ENV/lib/python2.7/site-packages/ | grep -i $1; }

alias ib='$IPY/ENV/bin/ipython console --profile=nbserver --matplotlib=qt4 --pprint --autoindent --color-info --colors=linux --confirm-exit;'
alias ib_config='f_sudo_textedit ~/.ipython/profile_nbserver/ipython_config.py'
alias ib_console='$SERV_HOME/ipython/ENV/bin/ipython console --profile=nbserver --pprint --autoindent --color-info --colors=linux --confirm-exit;'
function ib_console_existing() { $SERV_HOME/ipython/ENV/bin/ipython console --profile=nbserver --pprint --autoindent \
    --color-info --colors=linux --confirm-exit \
    --existing /home/ub2/SERVER2/ipython/config/.ipython/profile_default/security/$1; }
alias ib_js='f_sudo_xcode ~/.ipython/profile_nbserver/static/custom/custom.js'
alias ib_js_folder='open $HOME/.ipython/profile_nbserver/static/custom/'
alias ib_BD='cd $BD; source $SERV_HOME/ipython/ENV/bin/activate; ipython'
alias ib_scr='scr_ed; ipython'
alias ib_libs='ls $IPY/ENV/lib/python2.7/site-packages/; echo $IPY/ENV/lib/python2.7/site-packages/; echo "/usr/lib/python2.7/dist-packages/"; echo "/usr/local/lib/python2.7/dist-packages"'

# load special functions and aliases if shell controlled by iTerm2
#if [ "$(( `printenv ITERM_PROFILE | wc -l` ))" -ne 0 ]; then
#    echo $'\e]50;SetProfile=$USER\007'
#fi
#function iterm_growl() { echo -e $'\e]9;'${1}'\007' ; return ; }

alias kill_by='f_kill_by'
alias kill_by_port='f_kill_by_port'

alias locate_info='locate -S'
alias locate='locate -i'
alias locate_update='sudo /usr/libexec/locate.updatedb'

alias mnt='scr_ed; ./System_Control.py servers mnt'
alias mnt_EXT_HD='mkdir -p /Volumes/EXT_HD; $SSHFS ub1:/Volumes/EXT_HD /Volumes/EXT_HD -o ConnectTimeout=5'
alias umnt='sudo umount -f /Volumes/'

alias mysql_cmd='mysql -uroot -pDelivery100%'
alias mysql_config1='echo "money" | sudo emacs /opt/local/etc/mysql55/macports-default.cnf'
alias mysql_config2='echo "money" | sudo emacs /opt/local/etc/mysql55/my.cnf'

alias ng_push_config='$SERV_HOME/nginx/push_ng_config.bash'
#alias ng_reload='ng_push_config; sudo /usr/local/openresty/nginx/sbin/nginx -s reload -p $SERV_HOME/run -c /usr/local/openresty/nginx/conf/nginx.conf -g "user $ROOT $ROOT_GRP; pid $SERV_HOME/run/pids/sv_nginx.pid; error_log $SERV_HOME/run/logs/error/sv_nginx.log info; daemon off;"'
alias ng_start='ng_push_config; sudo nginx -p $SERV_HOME/run -c /usr/local/openresty/nginx/conf/nginx.conf -g "user $ROOT $ROOT_GRP; pid $SERV_HOME/run/pids/sv_nginx.pid; daemon on;"'
alias ng_reload='ng_push_config; sudo nginx -s reload -p $SERV_HOME/run -c /usr/local/openresty/nginx/conf/nginx.conf -g "user $ROOT $ROOT_GRP; pid $SERV_HOME/run/pids/sv_nginx.pid; daemon on;"'
alias ng_stop='sudo nginx -s stop -p $SERV_HOME/run -c /usr/local/openresty/nginx/conf/nginx.conf -g "user $ROOT $ROOT_GRP; error_log logs/error/sv_nginx.log info; pid $SERV_HOME/run/pids/sv_nginx.pid; daemon on;"'
alias ng_kill='sudo pkill -f nginx'

alias pb='pastebincl -n'

alias pip_upgrade='pip install -U pip'
alias pip_install='pip install --upgrade --allow-all-external --allow-unverified basemap'

alias pf_config='sudo emacs /opt/local/etc/postfix/main.cf'
alias pf_test_smtp='openssl s_client -connect smtp.gmail.com:587 -starttls smtp | tail -f /var/log/mail.log'
alias pf_get_cert="openssl s_client -connect smtp.gmail.com:587 -showcerts < /dev/null | sed -n '/-BEGIN /,/-END /p' | sudo sh -c 'cat > ~/.ssl/relayhost.pem'"
alias pf_test_mail='echo "test from postfix" | mail -s "Test: Server $SERVER_ID -- Postfix" seth.t.chase@gmail.com'
alias pf_queue='mailq'
alias pf_queue_clean='sudo postsuper -d ALL; sudo postsuper -d ALL deferred'
alias pf_params='postconf -n'
alias pf_log='tail -n 50 /var/log/mail.log'

alias pip_update='$HOME/.scripts/update_pip.sh'

# ------------------------------->>>
# -----pgSQL--------------------->>>

#alias pg_PUSH_CONFIG='sudo cp -R $SERV_HOME/pgsql93/postgresql93 /etc/rc.d/init.d/'
#alias pg_RESET='sudo chkconfig postgresql93 reset'
#alias pg_SHUTDOWN='sudo su postgres -c "pg_ctl stop -D /home/postgres/pgsql93/defaultdb -m smart"'


alias pg_tmp_start_with_echo="sudo su postgres -c '/usr/lib/postgresql/9.4/bin/pg_ctl start -D $PG_DATA_DIR -l /tmp/pgsql -o\" -i -E\"'"
function pg_tmp_start_with_echo_and_debug() {     \
    sudo su postgres -c "/usr/lib/postgresql/9.4/bin/postgres -D /var/lib/postgresql/9.4/main -i -E -c log_destination='stderr' -c logging_collector='on' -c log_directory='/tmp/pgsql' -c log_statement='all' -c log_min_messages='debug' -c log_min_duration_statement=0"; }
alias pg_tmp_start="sudo su postgres -c '/usr/lib/postgresql/9.4/bin/pg_ctl start -D $PG_DATA_DIR -o\" -i\"'"
alias pg_tmp_stop="sudo su postgres -c '/usr/lib/postgresql/9.4/bin/pg_ctl stop -m fast -D $PG_DATA_DIR -o\" \"'"

alias psql='sudo su postgres -c "psql --host=0.0.0.0 --port=8800 --username=postgres"'
function psql_c() { sudo su postgres -c "psql --host=0.0.0.0 --port=8800 --username=postgres -c '$1'"; }
function pg_load_dump_file() { \
    OUT_FILE_NAME=echo "$1" | sed -r 's/(.*)\/([^/]*)(\.sql)$/\2_OUT/'; \
    echo $OUT_FILE_NAME;}
    #DB_NAME=echo $1 | sed -r 's/(.*)\/([^_]*)_([^_]*)([^/]*)(\.sql)$/\3/'; \
    #sudo su postgres -c 'psql --host=0.0.0.0 --port=8800 --username=postgres -c "create database $DB_NAME;"'; \
    #sudo su postgres -c "psql --host=0.0.0.0 --port=8800 --username=postgres --dbname=$DB_NAME -f $1" >> $OUT_FILE_NAME 2>&1; \
    #unset OUT_FILE_NAME DB_NAME;}
export PG_DATA_DIR=/var/lib/postgresql/9.4/main
alias _pg_reload='sudo su postgres -c "/usr/lib/postgresql/9.4/bin/pg_ctl reload -D $PG_DATA_DIR"'

alias _pg_restart_smart='sudo su postgres -c "source $SERV_HOME/pgsql/ENV/bin/activate; /usr/lib/postgresql/9.4/bin/pg_ctl restart -w -D $PG_DATA_DIR -m smart"'
alias _pg_restart_fast='sudo su postgres -c "source $SERV_HOME/pgsql/ENV/bin/activate; /usr/lib/postgresql/9.4/bin/pg_ctl restart -w -D $PG_DATA_DIR -m fast"'
alias _pg_restart_immediate='sudo su postgres -c "source $SERV_HOME/pgsql/ENV/bin/activate; /usr/lib/postgresql/9.4/bin/pg_ctl restart -w -D $PG_DATA_DIR -m immediate"'

#alias _pg_restart_smart='sudo su postgres -c "/usr/lib/postgresql/9.4/bin/pg_ctl restart -w -D $PG_DATA_DIR -m smart"'
#alias _pg_restart_fast='sudo su postgres -c "/usr/lib/postgresql/9.4/bin/pg_ctl restart -w -D $PG_DATA_DIR -m fast"'
#alias _pg_restart_fast='sudo su postgres -c "source /home/ub2/SERVER2/ipython/ENV/bin/activate; /usr/lib/postgresql/9.4/bin/pg_ctl restart -w -D $PG_DATA_DIR -m fast"'
#alias _pg_restart_immediate='sudo su postgres -c "source /home/ub2/SERVER2/ipython/ENV/bin/activate; /usr/lib/postgresql/9.4/bin/pg_ctl restart -w -D $PG_DATA_DIR -m immediate"'
alias _pg_restart_fast_core='sudo su postgres -c "/usr/lib/postgresql/9.4/bin/pg_ctl restart -c -w -D $PG_DATA_DIR -m fast"'
alias _pg_configs='psql_c "show all;"'
alias _pg_configs_edit='semacs /etc/postgresql/9.4/main/postgresql.conf'
alias _pg_service_script='sudo emacs /etc/init.d/postgresql'
alias _pg_service_stop='sudo service postgresql stop'
alias _pg_service_start='sudo service postgresql start'
alias _pg_service_restart='sudo service postgresql restart'
alias _pg_service_reload='sudo service postgresql reload'
alias _pg_service_unload='sudo service postgresql unload'
#alias _pg_pid="pid=$(ps -ef | grep '/usr/lib/postgresql/9.4/bin/postgres' | grep -E '^postgres' | sed 's/^postgres //g' | sed -E 's/([^[0-9]]*)([0-9]+)(.*)/\2/')"


alias ports_listen='sudo lsof -n -i -P | grep LISTEN'
alias ports_listen_2='sudo netstat -ltnp'
alias ports_listen_3='nettop'
alias ports_sockets='netstat -lx'
alias ports_ssh='lsof -i tcp | grep ^ssh'

alias pydoc='python -m pydoc'
alias pyprofileread='pyprofileread'
alias pyprofilewrite='pyprofilewrite'

alias redis_config='sudo emacs /opt/local/etc/redis.conf'
alias redis_run='redis-server /opt/local/etc/redis.conf'
alias redis_kill='pkill -f redis-server'

alias restart='sudo shutdown -r now'

alias rsync_all='python $BD/rsync_cmds.py all'
alias rsync_test='python $BD/rsync_cmds.py test'

alias rt_='ssh cisco'
alias rt_reboot='rt_ reboot'
alias rt_nat='rt_ "iptables -t nat -L -v" 2> /dev/null'
alias rt_tbl='rt_ "iptables -L -v" 2> /dev/null'
alias rt_ps='rt_ "ps" 2> /dev/null'

alias scr_env='source $HOME/.scripts/ENV/bin/activate'
alias scr_ed='scr_env; cd $HOME/.scripts'
alias scr_d='scr_ed'
alias scr_sync='$HOME/.scripts/sync_scripts.bash'

alias SH='cd $SERV_HOME'

function sn4_ar_msg() { curl "http://autoremotejoaomgcd.appspot.com/sendmessage?key=APA91bG9W7n3uAWVND-jaRRbh0muYlx6znEJgUUFrMnRxGuagYMmRuTJ2OONeHD6ibkj1_nRgM8s7ah1WyDbFAMHX2Rf28dNdzpRHMUJUKPPvseoWDI_pHX2lHaEeoBsD7KZoyG4mfUwgT_Yl1CyHIVpy1Jx9zCrdw&message=$1"; }
alias sn4_ar_key='echo "APA91bG9W7n3uAWVND-jaRRbh0muYlx6znEJgUUFrMnRxGuagYMmRuTJ2OONeHD6ibkj1_nRgM8s7ah1WyDbFAMHX2Rf28dNdzpRHMUJUKPPvseoWDI_pHX2lHaEeoBsD7KZoyG4mfUwgT_Yl1CyHIVpy1Jx9zCrdw"'
function sn4_backup() { \
    sn4_ar_msg ssh_droid_start > /dev/null 2>&1;
    RES=$($HOME/.scripts/ENV/bin/celery --workdir=$HOME/.scripts/worker --app=sys_serv \
    call --queue=sys_serv_tasks sys_serv_tasks.sn4_backup --args='[]' \
    --countdown=20 | xargs -I '{}' printf 'sn4_backup [%s %s] expecting git task ID -- %s\n' $(date +%Y-%m-%d\ %H:%M:%S) {});
    echo $RES >> /var/sockets/supervisor_relay.log;
    echo 'OK';
}
alias sn4_ssh_droid_start='curl "https://autoremotejoaomgcd.appspot.com/sendmessage?key=APA91bG9W7n3uAWVND-jaRRbh0muYlx6znEJgUUFrMnRxGuagYMmRuTJ2OONeHD6ibkj1_nRgM8s7ah1WyDbFAMHX2Rf28dNdzpRHMUJUKPPvseoWDI_pHX2lHaEeoBsD7KZoyG4mfUwgT_Yl1CyHIVpy1Jx9zCrdw&message=ssh_droid%20start"'
alias sn4_ssh_droid_stop='curl "https://autoremotejoaomgcd.appspot.com/sendmessage?key=APA91bG9W7n3uAWVND-jaRRbh0muYlx6znEJgUUFrMnRxGuagYMmRuTJ2OONeHD6ibkj1_nRgM8s7ah1WyDbFAMHX2Rf28dNdzpRHMUJUKPPvseoWDI_pHX2lHaEeoBsD7KZoyG4mfUwgT_Yl1CyHIVpy1Jx9zCrdw&message=ssh_droid%20stop"'
alias sn4_teamviewer_start='adb shell monkey -p com.teamviewer.quicksupport.market -c android.intent.category.LAUNCHER 1'
alias sn4_copy_screen_png_here='adb shell screencap -p /sdcard/screen.png && adb pull /sdcard/screen.png && adb shell rm /sdcard/screen.png'

alias topcpu='ps -ero pid=PID,%cpu=CPU,%mem=MEM,comm=CMD | head -15'
alias topmem='ps -emo pid=PID,%cpu=CPU,%mem=MEM,comm=CMD | head -15'

# <<< --- BASH COLORS --- >>>
alias t_bold="`tput smso`"
alias t_bold_off="`tput rmso`"
alias t_red='tput setaf 1'
alias t_green='tput setaf 2'
alias t_default='tput setaf 9'
alias t_blink='tput 1 m'
alias t_reset="`tput sgr0`"

alias test_nginx_socket='socat - UNIX-CLIENT:/var/log/nginx.sock'
alias to_log='syslog -s -l error -k Message'

alias untar='tar -zxvf'
function retar() { tar -zcvf $1 $2; }
alias retar_help='echo retar archive.tar.gz directory/'

function dl_unzip() { wget $1; tar -xzvf $1; }

#function g-RESTORE_LOCAL_F() { \
#    cd ~/$SERVER/local_config/ \
#    ln -s ~/.git/.gitignore ./; \
#	ln -s ~/.git/.gitignore_global ./; \
#	ln -s ~/$SERVER/local_config/.bashrc ./ ; \
#	ln -s ~/$SERVER/local_config/.iterm2 ./ ; \
#	ln -s ~/$SERVER/local_config/.profile ./ ; \
#	ln -s ~/$SERVER/local_config/.bash_profile ./ ;}

#  --  Git Status (g-s*):
alias g-s='git status'
alias g-s-STAGED='git diff --name-only --cached | more'
alias g-s-p='git status --porcelain'
alias g-s-p-STAGED='git diff --name-status --cached | more'
alias g-s-UNSTAGED_ALL='git diff --stat --name-only'
alias g-s-UNTRACKED='git status --porcelain | grep -E "\?\?" | awk '\''{print }'\'' | tr '\''??'\'' '\'' '\'''
alias g-NOT_STAGED="git diff --name-only | more"
alias g-NOT_STAGED-MOD="git diff --name-status | more | grep ^M | sed 's/^M\s*//g'"
function g-S-DIFF-ADDED_MODDED() { git diff $1 --name-status | grep -v ^D | sed 's/^[A-Z]\s*//g';}
# git diff 7f7a2a7 --name-status | grep -v ^D | sed 's/^[A-Z]\s*//g' | xargs -I '{}' git checkout 7f7a2a7 -- {}
function g-s-DIFF-REMOVED() { git diff $1 --name-status | grep ^D | sed 's/^M\s*//g';}
alias g-b='git branch -avv'
alias g-b-DELETE='git branch -d'
alias g-b-r-DELETE='git branch --remotes --delete'
alias g-c='git commit -m'
alias g-ch-n='git checkout -b'
alias g-f-MODIFIED="g-s-p | grep '^ M ' | awk '{print $2}'"
alias g-i='git update-index --assume-unchanged --'
alias g-i-UNTRACKED='git ls-files -o --exclude-standard | xargs git ignore'
alias g-i-FOLDER='git ls-files -z | xargs -0 git update-index --assume-unchanged'
alias g-i-LIST='git ls-files -v | grep "^[[:lower:]]"'
alias g-l='git log --graph --decorate --pretty=oneline --abbrev-commit --all'
alias g-r-c="g-s-p | grep '^ D ' | sed 's/^\sD\s//' | xargs git rm --cached --ignore-unmatch -r -f --"
alias g-r="g-s-p | grep '^ D ' | sed 's/^\sD\s//' | xargs git rm --ignore-unmatch -r -f --"
alias g-r-REMAINING_UNSTAGED_ALL='git diff --stat --name-only | xargs git rm --cached --ignore-unmatch -f -r --'
alias g-r-REMAINING_UNSTAGED_DELETED='git status --porcelain | grep "^ D " | sed "s/ [A-Z] //g" | xargs -I '{}' git rm -q --cached --ignore-unmatch -f -r -- {} > /dev/null 2>&1'
alias g-a='g-r-REMAINING_UNSTAGED_DELETED && git add --ignore-removal -- .'
alias g-r-IGNORED='cat .gitignore | xargs git rm --cached -r --ignore-unmatch -q --'
alias g-r-UNSTAGED-UNTRACK="g-not_staged | awk '{print $2}' | xargs git update-index --remove --ignore-missing --force-remove --assume-unchanged --skip-worktree --again -q --"
alias g-reset-FLAGS="git ls-files -o | sed -r "s/'/\\\'/" | grep -v /$ | xargs -I '{}' printf '"%s"\n' {} | xargs -I '{}' git add --ignore-removal -- {}"
alias g-reset-ALL_FLAGS='for i in 1 2 3 4 5 6; do find ./SERVER$i/. -type f -name "*" -print0 | xargs -0 git add -f --; done'
alias g-CLONE='git clone --recursive'
alias g-SPARSE_UPDATE='git read-tree -mu HEAD'
alias g-RESTORE_LOCAL='g-restore_local_f'
alias g-UNTRACK='git update-index --remove --ignore-missing --force-remove --assume-unchanged -q --'
function g_add_commit_push() { git add --ignore-removal -- .; \
    if [ $(git diff --stat --name-only | wc -l) -gt 0 ]; then \
        git diff --stat --name-only | xargs -0 git rm --cached --ignore-unmatch -f -r --; \
        git status --porcelain | grep "^ D " | sed "s/ [A-Z] //g" | xargs git rm --cached --ignore-unmatch -f -r -- ; \
    fi;
    git commit -m "$1"; \
    sleep 1; \
    git push ; \
    git status; }
alias g-X='g_add_commit_push'

#  --  Git Submodules (gs-*):
alias gs-s='git submodule foreach --recursive git branch -avv'
alias gs-p='git pull && git submodule init && git submodule update && git submodule status'

# new submodule example
# git submodule add --name seamless_yelp_scraping -- git@github.com:sethc23/seamless_yelp_scrapi
# git submodule add -b custom --name PastebinPython -f -- git@github.com:sethc23/PastebinPython.
# git submodule add -- git@github.com:sethc23/aporo aporo


#  --  Dev Branch (g-D*):
function g_push_dev_and_master() { \
    g_add_commit_push; \
    dev_branch=`git rev-parse --abbrev-ref HEAD`; \
    git checkout master; \
    #git merge --stat --no-edit -X theirs \
    #    $(git branch -v | sed -r 's/(\*|\s) //' | \
    #        grep ^dev | sed -r 's/^(dev\s*)([A-Za-z0-9]+)\s(.*)$/\2/'); \
    git merge `git log --pretty=format:'%h' -n 1` $dev_branch; \
    git push; \
    git checkout dev;\
    git branch -avv; }
alias g-DX='g_push_dev_and_master'


function g-init_w_descr() { git init; rm .git/config; cd .git; \
    cp ~/.gitconfig ./config; cd ..; emacs .git/config; \
    git-hub create --desc="$1"; \
    pwd | sed -r 's/.*\/([^\/]+)$/\1/g' | xargs -I '{}' git remote add github git@github.com:sethc23/{}.git; \
    git push github master; \
    git branch --set-upstream-to=github/master; \
    git checkout -b dev && git push github dev; \
    git branch --set-upstream-to=github/dev; \
    git branch -avv; }
    

#  --  Git Commit (g-c_*):
function g-c_EMAIL() { git show -s --format=%ce $1 | head -n 1; }
function g-c_DATE() { git show -s --format=%ai $1 | head -n 1; }
function g-c_DATE_EPOCH() { git show -s --format=%at $1 | head -n 1; }

#  --  Git Blog (g-B*)
alias g-B='sudo bundle install && bundle exec jekyll serve --drafts'

# Out Specific Lines
# sed -n '20,40p' file_name
# awk 'FNR>=20 && FNR<=40' file_name

# Exemplar Gist
# -- Update Gist
# sed -n '6354,6848p' f_postgres.py | sed -r 's/^            //g' | gist -u d2ea443dee86c22d201f -f turnstile_funct.py -
# -- New Gist
# sed -n '1348,1457p' f_postgres.py | sed -r 's/^            //g' | gist -f turnstile_funct.py -d "f(x) z_get_string_dist" -


# rebasing technique
# git rebase -i -p {first commit with err}
# git commit --amend --author "sethc23 <sethc23@users.noreply.github.com>" --no-edit && git reba

alias l-test="printf 'package.loaded.tmp=nil\nt=require\"tmp\"\nt.test()' | luap --"