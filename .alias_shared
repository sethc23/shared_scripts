function aporo_env() { cd $APORO; source ENV/bin/activate; }
function aprinto_env() { cd $APRINTO; source ENV/bin/activate; }
function djJSON() { f_getJSON http://0.0.0.0/api_view/$1/?format=json; }
function mnt_up() { $IPY/ENV/bin/python $HOME/.scripts/mounted_shares.py; }
function diff-dir-all() { colordiff --brief --recursive $1 $2; }
function diff-dir-left() { colordiff --brief --recursive $1 $2 | grep "Only in $(echo $1 | sed 's/[^/]*$//')"; }
function diff-dir-right() { colordiff --brief --recursive $1 $2 | grep "Only in $(echo $2 | sed 's/[^/]*$//')"; }
function diff-dir-files() { colordiff --brief --recursive $1 $2 | grep -E '^Files'; }
function diff-dir-same() { colordiff --brief --recursive --report-identical-files $1 $2 | grep 'are identical'; }
function diff-files() { colordiff --side-by-side --suppress-common-lines --ignore-all-space \
    --ignore-blank-lines --ignore-space-change --ignore-blank-lines $1 $2; }
function diff-files-left() { colordiff --side-by-side --suppress-common-lines --ignore-all-space \
    --ignore-blank-lines --ignore-space-change --ignore-blank-lines $1 $2 | awk 'NR==1{print} NR>1 && /[^a-zA-Z0-9]<[^a-zA-Z0-9]/ {print}'; }
function diff-files-right() { colordiff --side-by-side --suppress-common-lines --ignore-all-space \
    --ignore-blank-lines --ignore-space-change --ignore-blank-lines $1 $2 | awk 'NR==1{print} NR>1 && /[^a-zA-Z0-9]>[^a-zA-Z0-9]/ {print}'; }
function source_bash() { source $HOME/$SHELL_CONFIG; }
function pull_shared_scripts() { a=`pwd`; cd $HOME/.scripts; git pull sub_dest master; source_bash; cd $a;}
function push_shared_scripts() { cd $HOME/.scripts;\
    git add -- .alias_shared;\
    git add -- .alias_linux;\
    git commit -m "updating aliases";\
    git push sub_dest master; }
function edit_this_bash() { $EDITOR $SERV_HOME/$ALIAS; source_bash; }
function edit_bash_share() { $EDITOR $HOME/.scripts/.alias_shared; source_bash; }
function edit_linux_share() { $EDITOR $HOME/.scripts/.alias_linux; source_bash; }
function edit_bash_prof() { $EDITOR "$HOME/$SHELL_CONFIG"; source_bash; }
function newalias_here() { echo "alias "$1 >> $SERV_HOME/$ALIAS; source_bash; }
function newalias_shared() { echo "alias "$1 >> $HOME/.scripts/.alias_shared; pull_shared_scripts; source_bash; }
function newalias_linux() { echo "alias "$1 >> $HOME/.scripts/.alias_linux; pull_shared_scripts; source_bash; }
function f_find_file() { sudo find -H -s $1 -type f -iregex "$2"; }
function f_find_in_files() { sudo find $1 -type f | xargs grep -iE "$2"; }
function f_find_folder() { sudo find -H -s $1 -type d -iregex "$2"; }
function f_getJSON() { curl -H 'Accept: application/json; indent=4' $1; }
function f_kill_by() { sudo kill -9 `ps -A | grep $1 | grep -v grep | awk '{print $1}'`; }
function f_mp_check() { port installed "*"$1"*" ; port search "*"$1"*"; }
function f_mp_py() { sudo port select python python$1; }
function f_mp_contents_exe () { port -q contents $1 | grep -E '/s?bin/'; }
function f_sencha_build() { cd $SERV_HOME/aporo/static/sencha; sudo sencha app build production; }
function ib_e() { cd $IPY; source ENV/bin/activate; }
function ib_qt_ub2() { sudo $IPY/ENV/bin/ipython qtconsole --existing /Volumes/ub2/home/ub2/.ipython/profile_default/security/kernel-$1.json;}
function link_mp_ib() { ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/$1 $IPY/ENV/lib/python2.7/site-packages/; }
function link_mp_aprinto() { ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/$1 $APRINTO/ENV/lib/python2.7/site-packages/; }
function link_mp_check() { ls -la /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ | grep -i $1; }
function link_mp_ib_confirm() { ls -la $IPY/ENV/lib/python2.7/site-packages/ | grep -i $1; }
function mp_py_select() { echo "admin" | sudo port select python python$1; }
function pyprofilewrite() { kernprof.py -l $1; }
function pyprofileread() { python -m line_profiler $1.lprof; }
function RD() { cd $BD/RD/src; python seamless.py; }
function RDt() { cd $BD/RD/src; python seamless_test.py; }


alias AP_android='cd $APORO/static/sencha/phonegap/platforms/android/'
alias AP_phonegap_build_android='AP_android; sudo phonegap build android --release;'
alias AP_sencha='cd $APORO/static/sencha/'
alias AP_sencha_build='AP_sencha; sudo sencha app build package;'
alias JSON='f_getJSON'
alias RD_e='cd $BD/RD/src'
alias RDt='RDt'

alias apache_compile='apachectl -V'
alias apache_config='sudo emacs /etc/apache2/httpd.conf'
alias apache_load='sudo launchctl load -w /System/Library/LaunchDaemons/org.apache.httpd.plist'
alias apache_mods='apachectl -M'
alias apache_restart='sudo apachectl restart'
alias apache_test='sudo apachectl configtest'
alias apache_unload='sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist'
alias apache_virtuals='apachectl -S'

alias aporo='cd $APORO'
alias aporo_debug='$APORO/ENV/bin/python $APORO/manage.py runserver 0.0.0.0:8080'
alias aporo_db_sync='$APORO/ENV/bin/python manage.py syncdb'
alias aprinto='cd $APRINTO'
alias aprinto_debug='$APRINTO/ENV/bin/python $SERV_HOME/aprinto/manage.py runserver 0.0.0.0:8088'
alias aprinto_db_sync='$APRINTO/ENV/bin/python manage.py syncdb'
alias aprinto_psql='/opt/local/lib/postgresql93/bin/psql -U postgres -h 0.0.0.0 --port=8800 aprinto'


alias aws_addr='aws ec2 describe-addresses --filters Name="instance-id",Values="i-8206d068"'
alias aws_attach_volume='aws ec2 attach-volume --volume-id vol-349bc67f --instance-id i-8206d068 --device /dev/sdh'
alias aws_config='cat $AWS_CONFIG_FILE'
alias aws_create_snapshot='aws ec2 create-snapshot --volume-id vol-f4f5a9bc --description'
alias aws_create_volume='aws ec2 create-volume --snapshot-id snap-97e0dc1a --availability-zone us-east-1a'
alias aws_env='cd $SERV_HOME/aws; source ENV/bin/activate'
function aws_info_f() { aws ec2 describe-instances --filters Name="tag-value",Values="$1"; }
alias aws_info='aws_info_f'
alias aws_ip_assoc='aws ec2 associate-address --instance-id i-40b143ba --allocation-id eipalloc-44289721'
alias aws_ip_disassoc='aws ec2 disassociate-address --association-id eipassoc-5a8bc53e'
alias aws_owner_id='aws_info | grep IpOwnerId'
alias aws_s3_buckets='aws s3 ls'
alias aws_show_snapshots='aws ec2 describe-snapshots --filters Name="owner-id",Values="225385062148"'
alias aws_start='aws_env; aws ec2 start-instances --instance-id "i-8206d068"'

alias mnt_up='mnt_up'
alias pull_shared_scripts='pull_shared_scripts'
alias push_shared_scripts='push_shared_scripts'
alias push_ssh_config='mnt_up; cp -R ~/.ssh/config /Volumes/mb/Users/admin/.ssh/; cp -R ~/.ssh/config /Volumes/ubuntu/home/ubuntu/.ssh/'
alias ssh_config='emacs ~/.ssh/config; push_ssh_config'

function copy_back_aliases() { cp -R $HOME/.alias_shared $HOME/.scripts/.alias_shared; }
alias bashedit_here='edit_this_bash'
alias bashedit_prof='edit_bash_prof'
alias bashedit_shared='edit_bash_share; push_shared_scripts'
alias bashedit_linux='edit_linux_share; push_shared_scripts'

alias btoff='echo "admin" | sudo defaults write /Library/Preferences/com.apple.Bluetooth.plist ControllerPowerState 0'
alias bton='echo "admin" | sudo defaults write /Library/Preferences/com.apple.Bluetooth.plist ControllerPowerState 1'
alias chmod_num="stat -f %Mp%Lp"
alias cmd='compgen -a | grep'
alias convert_pdf='pdftohtml -i -c -xml'

alias countF='ls | wc -l'
alias cy_build='cd $BD/RD/src/cython_exts/; python cy-build.py build_ext -i;'
alias cy_clean='cd $BD/RD/src/cython_exts/; sudo python cy-build.py clean;'
alias cy_folder='cd $BD/RD/src/cython_exts/;'
alias cy_help='cd $BD/RD/src/cython_exts/; python cy-build.py --help-commands;'

alias ec2="ssh -i ~/.ssh/grp1.pem ec2-user@ec2-54-164-189-68.compute-1.amazonaws.com -p 10101"
alias ec2_reboot='aws ec2 reboot-instances --instance-ids i-8206d068'
alias ec2_pg_tunnel='ssh ub3 -L 9088:localhost:8800 -N &'

alias enableScreenSh='sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -off -restart -agent -privs -all -allowAccessFor -allUsers -clientopts'
alias find_file='f_find_file'
alias find_folder='f_find_folder'
alias git_history='git reflog --date=local origin/master'
alias git_sencha='echo "admin" | sudo git clone https://github.com/sethc23/aporo.git -b sencha $HOME/django/Dropbox/aporo/static/sencha'
alias grep_folder='grep -r "$1" *'

alias grok_app='ngrok -hostname app.aporodelivery.com 80'
alias grok_mysql='ngrok -proto tcp 3306'
alias grok_printer='ngrok -hostname printer.aporodelivery.com 80'

alias hiddenOff='defaults write com.apple.finder AppleShowAllFiles -bool true; killall Finder'
alias hiddenOn='defaults write com.apple.finder AppleShowAllFiles -bool false; killall Finder'
alias hist_cmds="history | awk '{\$1=\$2=\$3=\"\";print}' | sed 's/^   //'"

# history | sed -e 's/^[ \t]*//' | sort -u -k4 | sort -k1
# need to standardize column separation and re-split

alias ib='sudo $IPY/ENV/bin/ipython console --profile=nbserver --matplotlib=qt4 --pprint --autoindent --color-info --colors=linux --confirm-exit;'
alias ib_load='sudo launchctl load -w /Library/LaunchDaemons/custom.ipython_launchctl.plist;'
alias ib_unload='sudo launchctl unload -w /Library/LaunchDaemons/custom.ipython_launchctl.plist;'
alias ib_config='f_sudo_textedit ~/.ipython/profile_nbserver/ipython_config.py'
alias ib_console='$SERV_HOME/ipython/ENV/bin/ipython console --profile=nbserver --matplotlib=qt4 --pprint --autoindent --color-info --colors=linux --confirm-exit;'
alias ib_js='f_sudo_xcode ~/.ipython/profile_nbserver/static/custom/custom.js'
alias ib_js_folder='open $HOME/.ipython/profile_nbserver/static/custom/'
alias ib_qt='$IPY/ENV/bin/ipython qtconsole --profile=nbserver --matplotlib=qt4 --pprint --autoindent --color-info --colors=linux --confirm-exit;'

alias kill_by='f_kill_by'

alias lid_disable='sudo nvram boot-args="niog=1"'
alias lid_enable='sudo nvram -d boot-args'
alias locate_info='locate -S'
alias locate='locate -i'
alias locate_update='sudo /usr/libexec/locate.updatedb'
alias load_locate='sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist'
alias unload_locate='sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.locate.plist'
alias load_syslogd='sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.syslogd2.plist; sudo launchctl start custom.syslogd'
alias unload_syslogd='sudo launchctl unload -w -F /System/Library/LaunchDaemons/com.apple.syslogd2.plist; sudo launchctl stop custom.syslogd'
alias load_sshd='sudo launchctl load -w /Library/LaunchDaemons/org.macports.OpenSSH.plist'
alias unload_sshd='sudo launchctl unload -w /Library/LaunchDaemons/org.macports.OpenSSH.plist'

alias mnt_s3_always='$IPY/ENV/bin/python $HOME/.scripts/mounted_shares.py mnt_s3_always'
alias mnt_ec2='$IPY/ENV/bin/python $HOME/.scripts/mounted_shares.py ec2'
alias mnt_ms1='mkdir -p /Volumes/ms1; sshfs ms1_wifi:/ /Volumes/ms1 -ovolname=ms1'
alias mnt_s2_remote='mkdir -p /Volumes/mb; sshfs mb_remote:/ /Volumes/mb -ovolname=mb'
alias mnt_ub3='$IPY/ENV/bin/python $HOME/.scripts/mounted_shares.py ub3'

alias mp_check='f_mp_check'
alias mp_clean_port_all='sudo port clean --all'
alias mp_clean_port_safe='sudo port clean'
alias mp_clean_db='port echo leaves'
#alias mp_clean_db_confirmed="while sudo port uninstall leaves --follow-dependencies; do :; done"
alias mp_contents_exe='f_mp_contents_exe'
alias mp_contents_files='port contents'
alias mp_dependents='port dependents'
alias mp_info='port info'
alias mp_install='sudo port install'
alias mp_installed='port installed'
alias mp_livecheck='port livecheck'
alias mp_outdated_get='port outdated'
alias mp_py_dir='ls /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/'
alias mp_saveports='port -qv installed > $HOME/Desktop/myports.txt'
alias mp_search='port search --name --line'
alias mp_search_full='port search --name'
alias mp_search_group='port search --glob'
alias mp_uninstall_follow='sudo port uninstall --follow-dependents'
alias mp_uninstall_safe='sudo port uninstall'
alias mp_update='sudo port selfupdate'
alias mp_upgrade='sudo port upgrade outdated'
alias mp_upgrade_all='sudo port upgrade outdated'
alias mp_upgrade_list='port outdated'
alias mp_variant='port variant'

alias mysql_cmd='mysql -uroot -pDelivery100%'
alias mysql_config1='echo "money" | sudo emacs /opt/local/etc/mysql55/macports-default.cnf'
alias mysql_config2='echo "money" | sudo emacs /opt/local/etc/mysql55/my.cnf'
alias mysql_load='echo "money" | sudo launchctl load -w /Library/LaunchDaemons/org.macports.mysql55-server.plist'
alias mysql_unload='echo "money" | sudo launchctl unload -w /Library/LaunchDaemons/org.macports.mysql55-server.plist'

alias ng_push_config='$SERV_HOME/nginx/push_ng_config.bash'
alias ng_load='ng_push_config; sudo launchctl load -w /Library/LaunchDaemons/custom.nginx.plist'
alias ng_unload='sudo launchctl unload -w /Library/LaunchDaemons/custom.nginx.plist'
#alias ng_reload='ng_push_config; sudo /usr/local/openresty/nginx/sbin/nginx -s reload -p $SERV_HOME/run -c /usr/local/openresty/nginx/conf/nginx.conf -g "user $ROOT $ROOT_GRP; pid $SERV_HOME/run/pids/sv_nginx.pid; error_log $SERV_HOME/run/logs/error/sv_nginx.log info; daemon off;"'

alias ng_start='ng_push_config; sudo nginx -p $SERV_HOME/run -c /usr/local/openresty/nginx/conf/nginx.conf -g "user $ROOT $ROOT_GRP; pid $SERV_HOME/run/pids/sv_nginx.pid; daemon on;"'
alias ng_reload='ng_push_config; sudo nginx -s reload -p $SERV_HOME/run -c /usr/local/openresty/nginx/conf/nginx.conf -g "user $ROOT $ROOT_GRP; pid $SERV_HOME/run/pids/sv_nginx.pid; daemon on;"'
alias ng_stop='sudo nginx -s stop -p $SERV_HOME/run -c /usr/local/openresty/nginx/conf/nginx.conf -g "user $ROOT $ROOT_GRP; error_log logs/error/sv_nginx.log info; pid $SERV_HOME/run/pids/sv_nginx.pid; daemon on;"'
alias ng_kill='sudo pkill -f nginx'

alias pip_upgrade='pip install -U pip'

alias pf_load='sudo port load postfix'
alias pf_unload='sudo port unload postfix'
alias pf_config='sudo emacs /opt/local/etc/postfix/main.cf'
alias pf_test_smtp='openssl s_client -connect smtp.gmail.com:587 -starttls smtp | tail -f /var/log/mail.log'
alias pf_dir='cd /opt/local/etc/postfix/'
alias pf_reload='pf_unload; pf_load;'
alias pf_get_cert="openssl s_client -connect smtp.gmail.com:587 -showcerts < /dev/null | sed -n '/-BEGIN /,/-END /p' | sudo sh -c 'cat > ~/.ssl/relayhost.pem'"
alias pf_test_mail='echo "test from postfix" | mail -s "Test: Server $SERVER_ID -- Postfix" seth.t.chase@gmail.com'
alias pf_params='postconf -n'
alias pf_log='tail -n 50 /var/log/mail.log'

alias pip_update='$HOME/.scripts/update_pip.sh'

alias ports_listen='sudo lsof -n -i -P | grep LISTEN'
alias ports_listen_2='sudo netstat -ltnp'
alias ports_listen_3='nettop'
alias ports_sockets='netstat -lx'
alias ports_ssh='lsof -i tcp | grep ^ssh'


alias pycharm='sudo /Applications/PyCharm.app/Contents/MacOS/pycharm'
alias pydoc='python -m pydoc'
alias pyprofileread='pyprofileread'
alias pyprofilewrite='pyprofilewrite'

alias redis_config='sudo emacs /opt/local/etc/redis.conf'
alias redis_run='redis-server /opt/local/etc/redis.conf'
alias redis_kill='pkill -f redis-server'

alias restart='sudo shutdown -r now'

alias rsync_all='python $BD/rsync_cmds.py all'
alias rsync_test='python $BD/rsync_cmds.py test'

alias scr_env='source $HOME/.scripts/ENV/bin/activate'
alias scr_ed='scr_env; cd $HOME/.scripts'

alias spotlight_off='sudo mdutil -a -i off; sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist;'
alias spotlight_on='sudo mdutil -a -i on; sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist;'
alias sudo_finder='sudo /System/Library/CoreServices/Finder.app/Contents/MacOS/Finder &'
alias sudo_textedit='f_sudo_textedit'

alias sv_ctl='sudo supervisorctl -s unix:///var/sockets/supervisor_root.sock'
alias sv_update='sudo supervisorctl -s unix:///var/sockets/supervisor_root.sock reread && sudo supervisorctl -s unix:///var/sockets/supervisor_root.sock update'

alias topcpu='ps -ero pid=PID,%cpu=CPU,%mem=MEM,comm=CMD | head -15'
alias topmem='ps -emo pid=PID,%cpu=CPU,%mem=MEM,comm=CMD | head -15'
alias xcode='f_sudo_xcode'

alias t_bold="`tput smso`"
alias t_bold_off="`tput rmso`"
alias t_red='tput setaf 1'
alias t_green='tput setaf 2'
alias t_default='tput setaf 9'
alias t_blink='tput 1 m'
alias t_reset="`tput sgr0`"

alias test_nginx_socket='socat - UNIX-CLIENT:/var/log/nginx.sock'
alias toggle_voiceover='osascript -e "`echo -e \"tell application \\"System Events\\"\ntell process \\"Finder\\"\nkey code 96 using command down\nend tell\nend tell\"`"'

alias T2='curl http://0.0.0.0:8888/t2;'
alias T='curl http://0.0.0.0:8888/t1?b=2;'
alias N='ng_push_config; ng_reload;'
alias S='kill_by syslog-ng; printf "" | printf "Checking processes..." | ps -A | grep syslog; syslog_push_config; sudo syslog-ng;'alias z1='echo test'

alias ib_libs='ls $IPY/ENV/lib/python2.7/site-packages/'
alias to_log='syslog -s -l error -k Message'
function dl_unzip() { wget $1; tar -xzvf $1; }

function g-restore_local_f() { ln -s ~/.git/.gitignore ~/; \
	 ln -s ~/.git/.gitignore_global ~/; \
	 ln -s ~/$SERVER/local_config/.bashrc ~/ ; \
	 ln -s ~/$SERVER/local_config/.iterm2 ~/ ; \
	 ln -s ~/$SERVER/local_config/.profile ~/ ; \
	 ln -s ~/$SERVER/local_config/.bash_profile ~/ ;}
function g_add_commit_push() { git add --ignore-removal -- .; \
    if [ $(git diff --stat --name-only | wc -l) -gt 0 ]; then \
        git diff --stat --name-only | xargs git rm --cached --ignore-unmatch -f -r --; \
    fi;
    git commit -m "$1"; \
    sleep 1; \
    git push sub_dest master; \
    git status; }

alias g-s='git status'
alias g-s-p='git status --porcelain'
alias g-s-untracked='git status --porcelain | grep -E "\?\?" | awk '\''{print }'\'' | tr '\''??'\'' '\'' '\'''
alias g-b='git branch -avv'
alias g-b-delete='git branch -d'
alias g-c='git commit -m'
alias g-ch-n='git checkout -b'
alias g-f-modified="g-s-p | grep '^ M ' | awk '{print $2}'"
alias g-i='git update-index --assume-unchanged --'
alias g-i_untracked='git ls-files -o --exclude-standard | xargs git ignore'
alias g-i_folder='git ls-files -z | xargs -0 git update-index --assume-unchanged'
alias g-i_list='git ls-files -v | grep "^[[:lower:]]"'
alias g-l='git log --graph --decorate --pretty=oneline --abbrev-commit --all'
alias g-a='git add --ignore-removal -- .'
alias g-r-c="g-s-p | grep '^ D ' | sed 's/^\sD\s//' | xargs git rm --cached --ignore-unmatch -r -f --"
alias g-r="g-s-p | grep '^ D ' | sed 's/^\sD\s//' | xargs git rm --ignore-unmatch -r -f --"
alias g-r-remaining_unstaged='git diff --stat --name-only | xargs git rm --cached --ignore-unmatch -f -r --'
alias g-r-ignored='cat .gitignore | xargs git reset -q --'
alias g-reset_flags="git ls-files -v | grep -v '^S ' | sed 's/H //' | git update-index --really-refresh --add --again"
alias g-pll_master='git pull master_source master; g-b'
alias g-psh_master='git push master_dest master; g-b'
alias g-pll_sub='git pull sub_source master; g-b'
alias g-psh_sub='git push sub_dest master; g-b'
alias g-pll_aprinto='git pull aprinto_repo master; g-b'
alias g-psh_aprinto='git push aprinto_repo aprinto'
alias g-pll_local_serv='git pull local_serv master; g-b'
alias g-psh_local_serv='git push local_serv master'
alias g-f_servs='git fetch git_repo; git fetch local_serv; g-b'
alias g-pll_servs='g-pll_master; g-pll_local_serv;'
alias g-psh_servs='g-psh_master; g-psh_local_serv;'
alias g-sparse_update='git read-tree -mu HEAD'
alias g-not_staged="git diff --name-status | awk \'{print $2}\'"
alias g-r-unstaged="g-not_staged | awk '{print $2}' | xargs git update-index --assume-unchanged --"
alias g-restore_local='g-restore_local_f'
alias g-X='g_add_commit_push'


#cat tmp.txt | xargs -n 1 $HERE/chroot.sh
#git log --abbrev --oneline | awk '{print $1}' | xargs -n 1 git diff-tree --no-commit-id --name-only -r | grep aprinto
#git log | grep -A 10 27393e8aec5f2b7cca54b3e29c5afa00a32e875b
#git log --abbrev --oneline | awk '{print $1}' | xargs -n 1 git diff-tree -r | grep -B 150 -E 'test_online_presence'
#git merge --no-commit -s recursive -X ours FETCH_HEAD
#git log --follow -p -- /home/ub2/SERVER2/BD_Scripts/ipython/notebooks/reference/Ubuntu_Config.ipynb | grep -E '^commit|git'
#git show <commit_id>