#!/bin/zsh

rsyslog_debug() {
    CMD="sudo /usr/local/sbin/rsyslogd -d -f $SH/rsyslog/config/debug.conf > /tmp/rsyslog_debug"

    exec $CMD
    DEBUG_PID="$(echo $!)"

    if [[ ! -S /dev/log ]]; then
        while true; do
            sleep 2
            [[ -S /dev/log ]] && break
        done
    fi
    sudo kill $DEBUG_PID
    exec $CMD
    DEBUG_PID="$(echo $!)"
    }

alias svc_rsyslog_disable='sudo systemctl disable rsyslog.service syslog.socket; sudo systemctl daemon-reload'
alias svc_rsyslog_enable='sudo systemctl daemon-reload; sudo systemctl enable /lib/systemd/system/rsyslog.service 2> /dev/null; sudo systemctl enable /lib/systemd/system/syslog.socket'
alias svc_rsyslog_start='sudo systemctl start rsyslog.service'
alias svc_rsyslog_stop='sudo systemctl stop rsyslog.service syslog.socket'
alias svc_rsyslog_restart='sudo service rsyslog restart'
alias svc_rsyslog_status='sudo systemctl status rsyslog.service syslog.socket'
alias svc_rsyslog_debug='sudo /usr/local/sbin/rsyslogd -d -f /etc/rsyslog.d/rsyslog.conf -n'
alias svc_rsyslog_debug_check='logger --priority=local0.debug "test"'

alias sl_push_config='sudo $SERV_HOME/syslog-ng/push_syslog_config.bash'
alias sl_start='sl_push_config; sudo /usr/local/sbin/syslog-ng'
alias sl_stop='kill_by syslog-ng; sleep 1; ps -A | grep syslog'
alias sl_config='sudo emacs /usr/local/etc/syslog-ng.conf'
alias sl_reload='sl_stop; sl_push_config; sl_start'
alias sl_debug='sl_push_config; sudo /usr/local/sbin/syslog-ng -Fvvedt'
alias sl_kill='kill_by syslog-ng'
alias sl_tail_all='sudo tail -f /var/log/syslogs/all.log'
alias sl_tail_internal='sudo tail -f /var/log/syslogs/syslog_internal.log'
alias sl_tail_resty='sudo tail -f /var/log/syslogs/resty_logger.log'
alias sl_tail_socat='sudo tail -f /var/log/syslogs/socat.log'
alias sl_tail_syslog='sudo tail -f /var/log/syslog'

sl_tail_syslog_statements() { 
    sudo tail -n 0 -f /var/log/syslog | while read line; do 
    echo $line | grep '#011#011' | sed -r 's/(.*)#011#011(.*)/\2/g'; done; }

sl_tail_syslog_logs() { 
    sudo tail -n 0 -f /var/log/syslog | while read line; do 
    echo $line | grep 'LOG:' | awk '{$1=$2=$3=$4=$5=$6=$7=""; print $0}' \
    | sed 's/^\s*//g' | grep 'LOG:'; done; }

alias sl_tail_syslog_all_else="sudo tail -f /var/log/syslog | grep -v '#011#011' | uniq"

sl_last_log() {
    DIR=/var/log/syslogs
    HELP_OPT=("-h" "--help")
    if [[ "$1" != "" ]] && [[ $HELP_OPT =~ $1 ]]; then
        echo "EXAMPLES:"
        echo "1. sl_last_log"
        echo ">>>\tlist of files (\"LOG LIST\") in directory $DIR sorted with most recent at bottom"
        echo ""
        echo "2. sl_last_log 2"
        echo ">>>\ttails 2nd file from bottom of LOG LIST"
        echo ""
        echo "3. sl_last_log tmp"
        echo ">>>\tsame as (1.) except only listing files (\"TMP LOG LIST\") where filename contains 'tmp' (case insensitive)"
        echo ""
        echo "4. sl_last_log tmp 1"
        echo ">>>\ttails bottom-most file in TMP LOG LIST"
    else
        case $1 in
            ''|*[!0-9]*);
                TAG="$1";
                log_num="$2";;
            *);
                TAG="";
                log_num="$1";;
        esac
        CMD="env ls -lAtr $DIR | tail -n +2"
        [[ -n "$TAG" ]] && CMD="$CMD | grep $TAG"
    fi
    if [[ -z "$log_num" ]]; then
        [[ -z "$TAG" ]] && env ls -lAtr $DIR | tail -n +2
        [[ -n "$TAG" ]] && env ls -lAtr $DIR | tail -n +2 | grep $TAG
    else
        log=$(env ls -At $DIR | head -n +$log_num | tail -n 1)
        printf "\e]1337;SetBadgeFormat=%s\a" \
            $(echo -n "$log" | base64)
        echo "\n\n" | sudo tail -n 20 -f $DIR/$log
        printf "\e]1337;SetBadgeFormat=%s\a" \
            $(echo -n "\(user.gitRepo):\(user.gitBranch):\(user.gitBranchTag)" | base64)
    fi
    }

