#!env zsh

aporo_env() {              source $APORO/ENV/bin/activate; }
aporo() {                  cd $APORO; aporo_env; }
aporo_ib() {               aporo; ipython; }
ib_konnect() {             sudo $IPY/ENV/bin/ipython console --existing \
    $HOME/.ipython/profile_default/security/kernel-$1.json; kill $1;
    }
path_of_pid_f() { realfullpath /proc/$1/exe; }
newalias_linux() {         echo "alias "$1 >> $HOME/.alias_linux; source_bash; push_linux_aliases; }


_mkvirtualenv_version(){
    _version=$1
    _env=$2
    DEST_PYTHON=$(sudo update-alternatives --query python \
        | sed -r 's/^([^:]+): //' \
        | grep python$_version | uniq | sort | tail -n 1)
    CURRENT_PYTHON=$(sudo update-alternatives --query python|grep value|sed 's/^Value: //')
    DEST_VENVW=$(sudo update-alternatives --query virtualenvwrapper \
        | sed -r 's/^([^:]+): //' \
        | grep python$_version | uniq | sort | tail -n 1)
    CURRENT_VENVW=$(sudo update-alternatives --query virtualenvwrapper|grep value|sed 's/^Value: //')

    [[ ! $DEST_PYTHON = $CURRENT_PYTHON ]]      \
        && sudo update-alternatives --set python $DEST_PYTHON
    [[ ! $DEST_VENVW = $CURRENT_VENVW ]]        \
        && sudo update-alternatives --set virtualenvwrapper $DEST_VENVW

    mkvirtualenv $_env

    [[ ! $DEST_PYTHON = $CURRENT_PYTHON ]]      \
        && sudo update-alternatives --set python $CURRENT_PYTHON

    [[ ! $DEST_VENVW = $CURRENT_VENVW ]]        \
        && sudo update-alternatives --set virtualenvwrapper $CURRENT_VENVW

    }
mkvirtualenv3(){ _mkvirtualenv_version 3 $1; }
mkvirtualenv2(){ _mkvirtualenv_version 2 $1; }


# f_kill_by() {              sudo kill -9 `ps -ef | grep $1 | awk '{print $2}'`; }
# alias kill_by='f_kill_by'

alias blog_serv_local='github-pages check-health && bundle update && bundle exec jekyll serve --baseurl "" --port 4000'
alias BT_off='sudo /etc/init.d/bluetooth stop'
alias BT_on='sudo /etc/init.d/bluetooth start'
alias BT_restart='sudo /etc/init.d/bluetooth restart'
alias cel_env='cd $SERV_HOME/aprinto; source ENV/bin/activate'
alias chk_filesystem_types='sudo blkid'
alias semacs='sudo emacs -nw'
alias chkconfig='sudo sysv-rc-conf'
alias disable_wifi='sudo ifconfig wlan0 down'
alias dns_update='$SERV_HOME/dns/godaddy.py'
alias email='mutt -a /tmp/backup.xml -s "tasker" -- seth.t.chase@gmail.com'
alias locate_update='sudo /usr/bin/updatedb'
alias mail_old='mail -f $HOME_ENV/mbox'
alias path_of_pid='path_of_pid_f'
alias ps-command='ps --sort=comm'
alias ps-cpu='ps --sort=+%cpu'
alias ps-latest='ps --sort=-etime'
alias ps-mem='ps --sort=+%mem'
alias ps-pid='ps --sort=+ppid,+pid'
alias ps-threads='ps -f --sort=+ppid,+pid'
alias pydoc='python -m pydoc'
alias red_keys='redis-cli -h localhost -p 6379 -n 0 keys \*'
alias refind-boot-order='sudo efibootmgr -v'
alias refind-reset='sudo efibootmgr -o 0000,0002,0003,0001,0080; refind-boot-order'
alias S='kill_by syslog-ng; printf "" | printf "Checking processes..." | ps -A | grep syslog-ng | grep -v grep; sl_push_config; sudo syslog-ng;'
alias scr_ed='scr_env; cd $HOME/.scripts'
alias scr_env='source $HOME/.scripts/ENV/bin/activate'
alias semacs='sudo emacs -nw'
alias show_temp='sensors'
alias topcpu='env ps -wx -o pid=PID,%cpu=CPU,%mem=MEM,comm=CMD | head -15'
# update-alts-list='alias env ls -1 /var/lib/dpkg/alternatives'
update-alts-list='sudo update-alternatives --get-selections'
update-alts-help(){
    echo ""
    echo "sudo update-alternatives --install <target link> <config name> <target path> <alternative index number>"
    echo "\te.g., sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 0"
    echo ""
    echo "sudo update-alternatives --config <config name>"
    echo "\te.g., sudo update-alternatives --config python"
    echo ""
    echo ""
    echo "sudo update-alternatives --set <config name> <path>"
    echo "\te.g., sudo update-alternatives --config python"
    echo ""
    }
alias uuid=uuid_random
alias uuid_random='uuidgen -r'
alias uuid_time='uuidgen -t'
alias vi='vim'