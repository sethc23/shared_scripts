#!env zsh

[[ -n $DEBUG_SHELL ]] && echo "shell/1_shell_env_START - $(realfullpath $0)"

tabs -4
#export TERM=screen-256color
export TERM=xterm-256color
#export TERM=xterm-color
export LANG="en_US.UTF-8"
export LANGUAGE="en_US:en"
export LC_COLLATE="C"
export CLICOLOR=1
#export LS_OPTIONS='--color=always'
#export GREP_OPTIONS='--color=always'
export HISTCONTROL=ignoredups:erasedups
export HISTTIMEFORMAT="%d/%m/%y %T  "
export HISTIGNORE='*sudo -S*'
export HISTSIZE=1000000
export HISTFILESIZE=10000000
#export PROMPT_COMMAND="echo \[\$(date +%H:%M:%S)\]\ "
#export PROMPT_COMMAND="history -n; history -w; history -c; history -r; $PROMPT_COMMAND"
export EDITOR=$(which emacs)
export LESS='-R'
export LESSOPEN="$HOME_ENV/.lessfilter"
export S_PATH="$HOME_ENV/.config/me"

if [[ -n $BASH_VERSION ]]; then

   shopt -s histappend

   # check the window size after each command and, if necessary,
   # update the values of LINES and COLUMNS.
   shopt -s checkwinsize

   # If set, the pattern "**" used in a pathname expansion context will
   # match all files and zero or more directories and subdirectories.
   shopt -s globstar

   # set variable identifying the chroot you work in (used in the prompt below)
   if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
      debian_chroot=$(cat /etc/debian_chroot)
   fi

   export color_prompt=yes
   if [ "$color_prompt" = yes ]; then
      PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
   else
      PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
   fi
   unset color_prompt force_color_prompt

   d=/etc/dircolors
   test -r $d && eval "$(dircolors $d)"

fi


# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'


[[ -n $DEBUG_SHELL ]] && echo "shell/1_shell_env_END"

