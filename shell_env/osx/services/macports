#!/bin/zsh

link-mp-ib() { ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/$1 \
    $IPY/ENV/lib/python2.7/site-packages/; }
link-mp-aprinto() { ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/$1 \
    $APRINTO/ENV/lib/python2.7/site-packages/; }
link-mp-check() { ls -la /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ | grep -i $1; }
link-mp-ib-confirm() { ls -la $IPY/ENV/lib/python2.7/site-packages/ | grep -i $1; }
f-mp-check() { port installed "*"$1"*" ; port search "*"$1"*"; }
f-mp-py() { sudo port select python python$1; }
f-mp-contents-exe () { port -q contents $1 | grep -E '/s?bin/'; }



alias mp-check='f-mp-check'
alias mp-clean-db='port echo leaves'
#alias mp-clean-db_confirmed="while sudo port uninstall leaves --follow-dependencies; do :; done"
alias mp-clean-port-all='sudo port clean --all'
alias mp-clean-port-safe='sudo port clean'
alias mp-contents-exe='f-mp-contents-exe'
alias mp-contents-files='port contents'
alias mp-dependents='port dependents'
alias mp-info='port info'
alias mp-install='sudo port install'
alias mp-install-force='sudo port -n upgrade --force'
alias mp-installed='port installed'
alias mp-livecheck='port livecheck'
alias mp-outdated-get='port outdated'
alias mp-py-dir='ls /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/'
alias mp-saveports='port -qv installed > $HOME/Desktop/myports.txt'
alias mp-search='port search --name --line'
alias mp-search-full='port search --name'
alias mp-search-group='port search --glob'
alias mp-uninstall-follow='sudo port uninstall --follow-dependents'
alias mp-uninstall-safe='sudo port uninstall'
alias mp-update='sudo port selfupdate'
alias mp-upgrade='sudo port upgrade outdated'
alias mp-upgrade-all='sudo port upgrade outdated'
alias mp-upgrade-list='port outdated'
alias mp-variant='port variant'
alias mp-version-list='port select --list'
mp-version-all(){ port select --summary; }
mp-version-list(){ port select --list $1; echo "\n"; port select --show $1; }
mp-version-select(){ sudo port select $1 $2; }

function mp-variant-install_f() {
    function get_opts() {
        opt_grp=()
        for i in $opts; do
            read -p "Include variant: '$i'?" yn
            case $yn in
                [Yy]* ) opt_grp+=($i);;
                [Nn]* ) ;;
                * ) echo "Please select yes or no.";;
            esac
        done
    }

    variants=`mp-variant $1`
    opts=$(echo $variants | tail -n +2 | sed -r 's/^ *//')
    choices=(${=opts})
    echo "Do you wish to adjust for variants?"
    case $yn in
        [1Yy]* ) get_opts; break;;
        [2Nn]* ) mp-install $1;;
        * ) echo "Please select yes or no.";;
    esac
    }

alias mp-variant-install='mp-variant-install-f'
