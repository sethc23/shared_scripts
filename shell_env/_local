#!/bin/zsh

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------


# FORMAT: <user>=(<eth0> <wlan0>)
admin=(c8:2a:14:41:bf:23)
ub1=(00:1b:63:bb:88:0b)
ub2=(60:33:4b:97:84:a2 60:33:4b:1e:68:1b)

MANAGED_OSX_IDS=($admin)
MANAGED_LINUX_IDS=($ub1 $ub2)

MACHINE_ID=

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------

[[ -n "$DEBUG_SHELL" ]] && echo "_local_START_CLIENT_HOST: "$CLIENT_HOST

source_sub_dir() {
    for d in `env find $1/ -mindepth 1 -maxdepth 2 -type d | sort`; do
        for j in `env find $d -maxdepth 1 -type f | sort`; do 
            source $j
        done
    done
    }
source_files(){
    for i in `env find $1 -maxdepth 1 -type f | sort`; do source $i; done
    }
source_files_and_sub_dirs() {
    source_files "$1"
    source_sub_dir "$1"
    }

check_if_managed(){
    IS_MANAGED_OSX=
    IS_MANAGED_LINUX=
    END_LOOP=
    for i in $MAC_ADDRESSES; do 
        for j in $1; do
            if [[ $i = $j ]]; then
                MACHINE_ID=$i
                [[ "$OS_NAME" = "Darwin" ]] && IS_MANAGED_OSX=true
                [[ "$OS_NAME" = "Linux" ]] && IS_MANAGED_LINUX=true
                END_LOOP=true
                break
            fi
        done
    done
    }

OS_NAME=$(uname -a | cut -d ' ' -f1)
if [[ "$OS_NAME" = "Darwin" ]]; then
    MAC_ADDRESSES=$(networksetup -listallhardwareports | \
        env grep -Eo '([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})')
elif [[ "$OS_NAME" = "Linux" ]]; then
    IFACES=$(find /sys/class/net/ -type l | sed -s 's/\/sys\/class\/net\///')
    MAC_ADDRESSES=()
    for i in $IFACES; do MAC_ADDRESSES+=($(cat /sys/class/net/$i/address)); done
fi

check_if_managed $MAC_ADDRESSES

if [[ $IS_MANAGED_LINUX = true ]]; then

    [[ -n "$DEBUG_SHELL" ]] && echo "_local_ub2_123"

    if [[ -n "$ZSH_VERSION" ]]; then

        source $HOME_ENV/.scripts/shell_env/shell/zsh/_env 
        [[ -n "$DEBUG_SHELL" ]] && echo "_local_4"

        autoload -U compinit && compinit
        autoload -U bashcompinit && bashcompinit

        [[ -n "$DEBUG_SHELL" ]] && echo "_local_5"

        [[ "$CLIENT_HOST" = "SERVER3" ]] && export ZSH_THEME="cobalt2"
        [[ ! "$CLIENT_HOST" = "SERVER3" ]] && export ZSH_THEME="candy"

        plugins=$ZSH_PLUGINS
        source $ZSH/oh-my-zsh.sh
        autoload -U compinit && compinit
        autoload -U bashcompinit && bashcompinit

        [[ -n "$CLIENT_HOST" ]] && \
	       bindkey '\e[A' history-substring-search-up && \
	       bindkey '\e[B' history-substring-search-down

        for i in `env find $HOME_ENV/.scripts/shell_env/shell/zsh/completers -maxdepth 1 -type f`; do source $i; done
    
    # elif [[ -n "$BASH_VERSION" ]]; then

    fi

    export LOCAL_PORT=9092
    # export LOCAL_GIT_SYNC='[{"/home/ub2/.scripts":"git@github.com:sethc23/shared_scripts.git"}]'
    export LOCAL_GIT_SYNC='[{\"/home/ub2/.scripts\":\"git@github.com:sethc23/shared_scripts.git\"}]'

    [[ -n "$DEBUG_SHELL" ]] && echo "_local_6"

    source_files_and_sub_dirs "$HOME_ENV/.scripts/shell_env/shared"
    source_files_and_sub_dirs "$HOME_ENV/.scripts/shell_env/linux"

    [[ -n "$DEBUG_SHELL" ]] && echo "_local_7"
    source_files "$HOME_ENV/.scripts/shell_env/shell"
    [[ -n "$DEBUG_SHELL" ]] && echo "_local_8"

elif [[ $IS_MANAGED_OSX = true ]]; then

    [[ -n "$DEBUG_SHELL" ]] && echo "_local_admin_1"

    if [[ -n "$ZSH_VERSION" ]]; then

        source $HOME_ENV/.scripts/shell_env/shell/zsh/_env 
        [[ -n "$DEBUG_SHELL" ]] && echo "_local_admin_2"

        autoload -U compinit && compinit
        autoload -U bashcompinit && bashcompinit

        export ZSH_THEME="cobalt2"
        plugins=$ZSH_PLUGINS
        plugins+=(osx)
        source $ZSH/oh-my-zsh.sh
        compinit

        bindkey '\e[A' history-substring-search-up
        bindkey '\e[B' history-substring-search-down

        for i in `env find $HOME_ENV/.scripts/shell_env/shell/zsh/completers -maxdepth 1 -type f`; do source $i; done

        # eval "$(register-python-argcomplete /home/ub2/.scripts/syscontrol/sys_control.py)"
    fi

    export LOCAL_PORT=9093
    # export LOCAL_GIT_SYNC=[{"/Users/admin/.scripts":"git@github.com:sethc23/shared_scripts.git"}]
    export LOCAL_GIT_SYNC='[{"/home/ub2/.scripts":"git@github.com:sethc23/shared_scripts.git"}]'

    source_files_and_sub_dirs "$HOME_ENV/.scripts/shell_env/shared"
    source_files_and_sub_dirs "$HOME_ENV/.scripts/shell_env/osx"
    source_files "$HOME_ENV/.scripts/shell_env/shell"

    [[ -n "$DEBUG_SHELL" ]] && echo $PATH

else
    unset MANAGED_OSX_IDS
    unset MANAGED_LINUX_IDS
    printf "\n\n%s\n\n" "NO MATCH TO MACHINE_ID"
fi

if [[ "$PROFILE_STARTUP" == true ]]; then
    unsetopt xtrace
    exec 2>&3 3>&-
fi
#[[ $START_TMUX = true ]] && tmux attach -t base || tmux new -s base



[[ -n "$DEBUG_SHELL" ]] && echo "_local_END"
