#!/data/data/com.termux/files/usr/bin/zsh


# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------


# FORMAT: <user>=(<eth0> <wlan0>)
admin=(c8:2a:14:41:bf:23)
ub1=(00:1b:63:bb:88:0b)
ub2=(60:33:4b:97:84:a2 60:33:4b:1e:68:1b)
ms1=(00-FF-B6-74-19-D5)
gn=(dc:09:4c:15:c1:63)

MANAGED_OSX_IDS=($admin)
MANAGED_LINUX_IDS=($ub1 $ub2)

# Boolean for iTerm2
ITERM2=
[[ "$TERM_PROGRAM" = "iTerm.app" ]] || \
    [[ "$CLIENT_HOST" = "SERVER3" ]] && \
    ITERM2=true

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------

[[ -n "$DEBUG_SHELL" ]] && echo "_local_START"

[[ "$CMD_SHELL" = "juice" ]] && source ~/aliases && su-juice && exit

source_sub_dir() {
    for d in `env find $1/ -mindepth 1 -maxdepth 2 -type d | sort`; do
        for j in `env find $d -maxdepth 1 -type f | sort`; do 
            source $j
        done
    done
    }
source_files(){
    for i in `env find $1 -maxdepth 1 -type f | sort`; do source $i; done
    }
source_files_and_sub_dirs() {
    source_files "$1"
    source_sub_dir "$1"
    }

check_if_managed(){
    IS_MANAGED_OSX=
    IS_MANAGED_LINUX=
    END_LOOP=
    for i in $MAC_ADDRESSES; do 
        for j in $1; do
            if [[ $i = $j ]]; then
                MACHINE_ID=$i
                [[ "$OS_NAME" = "Darwin" ]] && IS_MANAGED_OSX=true
                [[ "$OS_NAME" = "Linux" ]] && IS_MANAGED_LINUX=true
                END_LOOP=true
                break
            fi
        done
    done
    }

OS_NAME=$(uname -o)
MAC_ADDRESSES=()
MACHINE_ID=

if [[ "$OS_NAME" = "Darwin" ]]; then
    MAC_ADDRESSES+=($(networksetup -getmacaddress Ethernet | \
        env grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'))
elif [[ "$OS_NAME" = "GNU/Linux" ]]; then
    IFACES=$(find /sys/class/net/ -type l | sed -s 's/\/sys\/class\/net\///')
    for i in $IFACES; do MAC_ADDRESSES+=($(cat /sys/class/net/$i/address)); done
elif [[ "$OS_NAME" = "CYGWIN" ]]; then
    MAC_ADDRESSES+=($(getmac.exe -V -FO LIST | grep -A 2 Ethernet | tail -n 1 | sed 's/Physical Address: //'))
elif [[ "$OS_NAME" = "Android" ]]; then
    MAC_ADDRESSES+=($(su -c 'cat /sys/class/net/wlan0/address'))
fi

check_if_managed $MAC_ADDRESSES

[[ -n "$DEBUG_SHELL" ]] && echo "_local_1"

if [[ -n "$ZSH_VERSION" ]]; then

    source $HOME_ENV/.scripts/shell_env/shell/zsh/_env 
    [[ -n "$DEBUG_SHELL" ]] && echo "_local_z_1"

    autoload -U compinit && compinit
    autoload -U bashcompinit && bashcompinit

    [[ -n "$DEBUG_SHELL" ]] && echo "_local_z_2"

    export ZSH_THEME="candy"
    [[ -n $ITERM2 ]] && export ZSH_THEME="cobalt2"

    plugins=$ZSH_PLUGINS

    [[ -n $IS_MANAGED_OSX ]] && plugins+=(osx)

    source $ZSH/oh-my-zsh.sh
    autoload -U compinit && compinit
    autoload -U bashcompinit && bashcompinit

    [[ -n $ITERM2 ]] && \
       bindkey '\e[A' history-substring-search-up && \
       bindkey '\e[B' history-substring-search-down

    for i in `env find $HOME_ENV/.scripts/shell_env/shell/zsh/completers -maxdepth 1 -type f`; do source $i; done

# elif [[ -n "$BASH_VERSION" ]]; then

fi

if [[ -n $IS_MANAGED_LINUX ]]; then

    export LOCAL_PORT=9092
    # export LOCAL_GIT_SYNC='[{"/home/ub2/.scripts":"git@github.com:sethc23/shared_scripts.git"}]'
    export LOCAL_GIT_SYNC='[{\"/home/ub2/.scripts\":\"git@github.com:sethc23/shared_scripts.git\"}]'

elif [[ -n $IS_MANAGED_OSX ]]; then

    export LOCAL_PORT=9093
    # export LOCAL_GIT_SYNC=[{"/Users/admin/.scripts":"git@github.com:sethc23/shared_scripts.git"}]
    export LOCAL_GIT_SYNC='[{"/Users/admin/.scripts":"git@github.com:sethc23/shared_scripts.git"}]'

fi

[[ -n "$DEBUG_SHELL" ]] && echo "_local_2"
source_files_and_sub_dirs "$HOME_ENV/.scripts/shell_env/shared"

[[ -n "$DEBUG_SHELL" ]] && echo "_local_3"
[[ "$OS_NAME" = "Linux" ]] && \
    source_files_and_sub_dirs "$HOME_ENV/.scripts/shell_env/linux"
[[ "$OS_NAME" = "Darwin" ]] && \
    source_files_and_sub_dirs "$HOME_ENV/.scripts/shell_env/osx"

[[ -n "$DEBUG_SHELL" ]] && echo "_local_4"
source_files "$HOME_ENV/.scripts/shell_env/shell"

[[ -n "$DEBUG_SHELL" ]] && echo "_local_5"
source_files "$HOME_ENV/.scripts/shell_env/android"

[[ -n "$DEBUG_SHELL" ]] && echo $PATH

if [[ -z $IS_MANAGED_LINUX ]] && [[ -z $IS_MANAGED_OSX ]]; then
    unset MANAGED_OSX_IDS
    unset MANAGED_LINUX_IDS
    printf "\n\n%s\n\n" "NO MATCH TO MACHINE_ID"
fi

if [[ "$PROFILE_STARTUP" == true ]]; then
    unsetopt xtrace
    exec 2>&3 3>&-
fi
#[[ $START_TMUX = true ]] && tmux attach -t base || tmux new -s base

[[ -n "$DEBUG_SHELL" ]] && echo "_local_END"
