#!/usr/bin/env zsh

e-recompile(){
    _start(){
        CWD=$(pwd)
        cd $HOME_ENV/.emacs.d
        [[ $(uname -o) = Darwin ]] \
            && ln -nfs /usr/local/bin/emacs-25.1-x11 /usr/local/bin/emacs
            # && ln -nfs /Applications/MacPorts/Emacs.app/Contents/MacOS/Emacs /usr/local/bin/emacs
        }
    _end(){
        ln -nfs $HOME_ENV/.scripts/toolbox/emacs /usr/local/bin/emacs
        cd $CWD
        unset CWD
        }
    _error(){
        echo "\nERROR\n";
        _end;
        return 0;
        }
    _start
    #find ~/.emacs.d -type f -regex ".*elc$" | xargs -I '{}' rm -fr {}
    find ~/.emacs.d/.cask/25.1/elpa -name "*elc" -delete
    # find /usr/local/share/emacs/25.1 -type f -regex ".*elc$"|xargs -I '{}' rm -fr {}
    echo '\nCLEANING'       && make clean       || return _error
    echo '\nMAKE'           && make             || return _error
    echo '\nCOMPILE\n'      && make compile     || return _error
    echo '\nAUTOLOADS\n'    && make autoloads   || return _error
    echo '\nSNIPPETS\n'     && make snippets    || return _error
    _end
    }
e-convert-md-org(){
    split_path(){
        if [[ $(basename "$1") = "$1" ]]; then
            _dir=$(pwd)
            _fname="$1"
        else
            _dir=$(dirname "$1")
            _fname=$(basename "$1")
        fi
    }
    [[ (-z $1) || ("$1" = "-h") || ("$1" = "--help") ]]                                     \
        && echo ""                                                                          \
        && echo "Usage:"                                                                    \
        && echo "\temacs e-convert-md-org README.md"                                        \
        && echo "\temacs e-convert-md-org /some/dir/README.md"                              \
        && echo "\temacs e-convert-md-org /some/dir/README.md /some/other/dir/README.org"   \
        && echo ""                                                                          \
        && return

    split_path "$1"
    _from_dir=$_dir
    _from_fname=$_fname

    split_path "$2"
    _to_dir=$_dir
    _to_fname=$_fname

    [[ -z $_to_fname ]]                                                                     \
        && _to_fname=$(echo $_from|sed -r 's/^(.*)[.](md|MD|markdown)$/\1.org/')

    pandoc -f markdown -t org -o "$_to_dir/$_to_fname" "$_from_dir/$_from_fname"
    }