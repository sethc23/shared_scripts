#!/bin/zsh

source_sub_dir() {
    for d in `env find $1/ -mindepth 1 -maxdepth 2 -type d | sort`; do
        for j in `env find $d -maxdepth 1 -type f | sort`; do 
            source $j
        done
    done
}
source_files(){
    for i in `env find $1 -maxdepth 1 -type f | sort`; do source $i; done
}
source_files_and_sub_dirs() {
    source_files "$1"
    source_sub_dir "$1"
}


[[ -n "$SUDO_USER" ]] && HOME_ENV=$(eval echo ~$SUDO_USER) || HOME_ENV=$(eval echo ~$USER)


if [[ -n "$BASH_VERSION" ]]; then
    SOURCE="${BASH_SOURCE[0]}"
    while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
        DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
        SOURCE="$(readlink "$SOURCE")"
        [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    BASE_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
fi
[[ -n "$ZSH_VERSION" ]] && BASE_DIR=${0:a:h}


source_files_and_sub_dirs "$BASE_DIR/shell"
source_files_and_sub_dirs "$BASE_DIR/shared"
_env=$(uname -a)
if [[ -n $(echo $_env | grep "Darwin") ]]; then
    source_files_and_sub_dirs "$BASE_DIR/osx"
elif [[ -n $(echo $_env | grep "Linux") ]]; then
    source_files_and_sub_dirs "$BASE_DIR/linux"
fi

export SH=$SERV_HOME
export ALIAS='.alias_s'$SERVER_ID

[[ -f $SERV_HOME/local_config/shell/$ALIAS ]] && source $SERV_HOME/local_config/shell/$ALIAS

export GIT_CONFIG=$HOME_ENV/.gitconfig
export J=/home/jail/home/serv
export CLIENT_HOST=$SERVER
export BD=$HOME/BD_Scripts
export GIT_REPOS=$HOME/GIT_REPOS
export G=$GIT_REPOS

# setup quick folders for sharing among ubuntu cluster
for n in 1 2 4 5; do
    if [[ $n != $SERVER_ID ]]; then
        x=`printf "export SHARE%s=/Volumes/ub%s/home/ub%s" $n $n $n`
        eval $x
        x=`printf "export SHARE%s_SERVER=SERVER%s" $n $n`
        eval $x
        y=`printf "export SERV%s=/Volumes/ub%s/$J" $n $n`
        eval $y
        y=`printf "export SERV%s_SERVER=SERVER%s" $n $n`
        eval $y
    fi
done
if [[ $SERVER_ID != 3 ]]; then
    export SHARE3=/Volumes/mbp2/Users/admin
    export SHARE3_SERVER=SERVER3
fi



