#!/data/data/com.termux/files/usr/bin/zsh

export USER=root
export USERNAME=$USER

[[ -n "$DEBUG_SHELL" ]] && echo "shell_env_base"

if [[ -n "$HOME_ENV" ]]; then
    BASE_DIR="$HOME_ENV/.scripts/shell_env"
else

    [[ -n "$SUDO_USER" ]] && export DISABLE_AUTO_UPDATE=true && export HOME_ENV="$(eval echo ~$SUDO_USER)"
    [[ -z "$SUDO_USER" ]] && export HOME_ENV="$(eval echo ~$USER)"

    if [[ -n "$HOME_ENV" ]]; then
        BASE_DIR="$HOME_ENV/.scripts/shell_env"
    else
        if [[ -n "$BASH_VERSION" ]]; then
            SOURCE="${BASH_SOURCE[0]}"
            while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
                DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
                SOURCE="$(readlink "$SOURCE")"
                [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
            done
            BASE_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
        fi
        [[ -n "$ZSH_VERSION" ]] && BASE_DIR=${0:a:h}
    fi
    [[ -z "$HOME_ENV" ]] && export HOME_ENV="$(eval echo ~$USER)"

fi

[[ -n "$BASH_VERSION" ]] && source $BASE_DIR/shell/bash/_base && source ~/bash.bashrc
[[ -n "$ZSH_VERSION" ]] && source $BASE_DIR/shell/zsh/_base && source ~/bash.bashrc
