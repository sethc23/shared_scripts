#!/data/data/com.termux/files/usr/bin/bash

if [ $1 = "-h" ] || [ $1 = "--help" ]; then
    echo ""
    echo ""
    echo "  chroot_upon <mount dir> <option>"
    echo "  where:"
    echo "    <mount dir> is a mounted directory and chroot target"
    echo "        and"
    echo "    <option> is either 'm' or 'u'"
    echo "            where 'm' means mount additional components (for chroot)"
    echo "                and 'u' means unmount additional components."
    echo ""
    echo "  Examples:"
    echo ""
    echo "    ./chroot_upon /mnt m"
    echo ""
    echo "            (working in chroot environment,"
    echo "             then after exiting...)"
    echo ""
    echo "    ./chroot_upon /mnt u"
    echo ""
    echo ""
    exit 0
fi

ls-mounts() { printf 'SOURCE:\t\t\t\tMOUNT POINT:\n'; df -h | tail -n +2 | sed -r 's/\s+/ /g' | cut -d ' ' -f1,6|awk '{ printf("%-31s %s\n", $1, $2); }'; }
ls-mounted() { ls-mounts|tail -n +2|sed -r 's/(\s\s)+/ /g'|sed 's/  / /g'|cut -d ' ' -f2; }
chk() { \
escaped_var=$(echo $MNT|sed 's/\//\\\//g');
echo $(ls-mounted|grep $MNT|sed -r 's/'$escaped_var'//'|grep "$1$");
}

MNT=$(echo "$1")

## MOUNT
cp /etc/resolv.conf $MNT/etc/
[[ -z "$(chk '/proc')" ]] && mount -t proc none $MNT/proc
[[ -z "$(chk '/sys')" ]] && mount -t sysfs none $MNT/sys
[[ -z "$(chk '/dev')" ]] && mount -o bind /dev $MNT/dev
[[ -z "$(chk '/dev/pts')" ]] && mount -t devpts none $MNT/dev/pts
LANG= chroot $MNT /bin/bash -c 'source /root/.bashenv; exec bash'

## UN-MOUNT
for i in dev/pts dev sys proc sys; do
    umount -lf $MNT/$i > /dev/null 2>&1
done



