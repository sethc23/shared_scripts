#!/Users/admin/.virtualenvs/devenv/bin/python

import os
from subprocess                     import Popen                    as sub_popen
from subprocess                     import PIPE                     as sub_PIPE

def run_cmd(cmd):
    p = sub_popen(cmd,stdout=sub_PIPE,shell=True
                  # ,executable='/usr/local/bin/zsh'
                  ,executable='/bin/bash'
                  )
    (_out,_err) = p.communicate()
    assert _err is None
    return _out.rstrip('\n')

def growl(msg):
    growl = "/usr/local/bin/growlnotify --sticky --message '%s'"
    run_cmd(growl % msg)
    raise SystemExit

def _sublime(args):
    D = dict(zip(['prefix','user','dir','match'],args))
    D["fpath"] = D['match'] if os.path.isabs(D['match']) else os.path.join(D["dir"],D['match'])
    cmd = "/usr/local/bin/realfullpath %(prefix)s/%(user)s/%(fpath)s" % D
    cmd = cmd.replace('//','/')
    print(cmd)
    fpath = run_cmd(cmd)
    open_sublime = "open -a \"Sublime Text\" %s" % fpath
    run_cmd(open_sublime)

def _local(args):
    f = args[-1]
    f_len = len(f)
    cmd = ''
    default_open = ['html','md','markdown','pdf','xls','xlsx']
    for it in default_open:
        if f.rfind(it)==f_len-len(it):
            cmd = 'open %s' % f
    if not cmd:
        cmd = "/usr/local/bin/subl -a %s" % f
    run_cmd(cmd)

def _settings(args):
    """
    as_base_window="$(cat <<EOF
    tell application "iTerm2"
        tell current session of current window
            $CMD
        end tell
    end tell
    EOF
    )"



    set colums to $COLUMNS

    resize_x=
    resize_y="$(cat <<EOF
    tell application "iTerm2"
        tell current session of current window
            set rows to $ROWS
        end tell
    end tell
    EOF
    )"
    """

if __name__ == '__main__':
    from sys import argv

    args = argv[1].strip('[]').split(',')
    args = [str(it).strip('"') for it in args]

    if args[0]=='sublime':
        _sublime(args[1:])
    elif args[0]=='local':
        _local(args[1:])
    else:
        print "Input:",argv
        print "Check file: %s" % __file__
